rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // SECURITY: UID-based ownership with placeholder validation
    // CRITICAL: Your actual UID is already set below
    // Find it in: Firebase Console -> Authentication -> Users
    
    match /portfolio/content {
      // SECURITY: Allow public read for viewer access
      allow read: if true;
      
      // SECURITY: Only authenticated owner can write
      // Explicitly reject placeholder UIDs to prevent misconfiguration
      allow write: if request.auth != null && 
                      request.auth.uid != 'YOUR_OWNER_UID_HERE' &&
                      request.auth.uid != 'YOUR_FIREBASE_USER_UID_HERE' &&
                      request.auth.uid == 'KH3PGwdE7bcPH3mPbuJjX0bV4K13';
    }
    
    // Alternative: If you set up user_roles table (recommended for scalability)
    // Uncomment this after creating user_roles table:
    /*
    match /user_roles/{roleId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admin via console
    }
    
    match /portfolio/content {
      allow read: if true;
      allow write: if request.auth != null && 
                      hasRole(request.auth.uid, 'admin');
    }
    
    function hasRole(userId, role) {
      return exists(/databases/$(database)/documents/user_roles/$(userId + '_' + role));
    }
    */
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
